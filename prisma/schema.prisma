// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// id        Int      @id @default(autoincrement())
// createdAt DateTime @default(now())
// updatedAt DateTime @updatedAt

enum Role {
  ADMIN
  CUPID
  STANDARD
}

model User {
  id            Int             @id @default(autoincrement())
  admin         Admin?
  createdAt     DateTime        @default(now())
  cupid         Cupid?
  email         String          @unique
  firstName     String
  lastName      String
  notifications Notifications[]
  refreshToken  RefreshToken?
  password      String
  photoUrl      String?
  profile       Profile?
  purchase      Purchases[]
  role          Role            @default(STANDARD)
  updatedAt     DateTime        @updatedAt
}

// This is the Standard user schema.
// Will need to create schemas for cupids and managers
model Profile {
  id                Int      @id @default(autoincrement())
  age               Int?
  balance           Decimal  @default(25)
  createdAt         DateTime @default(now())
  dailyBudget       Decimal  @default(0)
  relationshipGoals String?
  cupidId           Int?
  cupid             Cupid?   @relation(fields: [cupidId], references: [id])
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id])
  userId            Int      @unique
}

model Cupid {
  id        Int       @id @default(autoincrement())
  bio       String
  createdAt DateTime  @default(now())
  earnings  Decimal   @default(0)
  hiredBy   Profile[]
  fired     Boolean   @default(false)
  longitude Decimal   @default(0)
  latitude  Decimal   @default(0)
  rating    Decimal   @default(0)
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @unique
  working   Boolean   @default(false)
}

model Admin {
  id        Int      @id @default(autoincrement())
  fired     Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  hashedToken String   @unique
  revoked     Boolean  @default(false)
  updatedAt   DateTime @updatedAt
  User        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
}

model Purchases {
  id          Int      @id @default(autoincrement())
  cupidId     Int?
  cupidPayout Decimal
  details     String   @default("Cupid Code Intervention")
  jobCost     Decimal
  profit      Decimal
  timestamp   DateTime @default(now())
  total       Decimal
  User        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model Notifications {
  id        Int              @id @default(autoincrement())
  message   String
  title     String
  timeStamp DateTime         @default(now())
  type      NotificationType @default(DAILY)
  User      User             @relation(fields: [userId], references: [id])
  userId    Int
}

enum NotificationType {
  AIGEN
  ALL
  DAILY
}
